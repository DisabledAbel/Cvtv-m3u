name: Update Missouri IPTV Playlist

on:
  schedule:
    - cron: "0 */12 * * *"
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repo (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Debug: show repo top files (for logs)
        run: |
          echo "cwd: $(pwd)"
          ls -la
          echo "Searching for missouri build script names..."
          find . -maxdepth 4 -type f -iname "*missouri*" -print || true

      - name: Locate & run build script
        id: build
        run: |
          set -euo pipefail

          if [ -f ./scripts/build-missouri-playlist.js ]; then
            echo "Found: ./scripts/build-missouri-playlist.js"
            node ./scripts/build-missouri-playlist.js
            exit 0
          fi

          if [ -f ./build-missouri-playlist.js ]; then
            echo "Found: ./build-missouri-playlist.js"
            node ./build-missouri-playlist.js
            exit 0
          fi

          if [ -f ./tools/build-missouri-playlist.js ]; then
            echo "Found: ./tools/build-missouri-playlist.js"
            node ./tools/build-missouri-playlist.js
            exit 0
          fi

          # fallback to npm script
          if npm run --silent | grep -q "build:missouri"; then
            echo "Found npm script 'build:missouri' - running it"
            npm run build:missouri
            exit 0
          fi

          echo "::error::No build script found. Searched common locations."
          ls -la
          find . -maxdepth 4 -type f -iname "*missouri*" -print || true
          exit 1

      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Pull latest changes (rebase)
        run: |
          git fetch origin
          git checkout master
          git pull --rebase origin master

      - name: Commit changes if any
        id: commit
        run: |
          set -e
          # adjust path below if your build writes a different file
          git add playlists || true

          # If there are no staged changes, mark committed=false
          if git diff --staged --quiet; then
            echo "No staged changes to commit"
            echo "committed=false" >> $GITHUB_OUTPUT
          else
            git commit -m "Auto-update Missouri IPTV playlist [skip ci]" || true
            echo "committed=true" >> $GITHUB_OUTPUT
          fi

      - name: Push changes
        if: steps.commit.outputs.committed == 'true'
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master

      - name: Finished (no push)
        if: steps.commit.outputs.committed != 'true'
        run: echo "No update necessary; job finished without pushing."
